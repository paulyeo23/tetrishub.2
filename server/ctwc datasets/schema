-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Admins"
(
    id integer NOT NULL DEFAULT nextval('"Admins_id_seq"'::regclass),
    "userId" integer NOT NULL,
    "permissionId" integer NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Admins_pkey" PRIMARY KEY (id),
    CONSTRAINT "Admins_permissionId_key" UNIQUE ("permissionId"),
    CONSTRAINT "Admins_userId_key" UNIQUE ("userId")
);

CREATE TABLE IF NOT EXISTS public."Announcements"
(
    id integer NOT NULL DEFAULT nextval('"Announcements_id_seq"'::regclass),
    "userId" integer NOT NULL,
    "eventId" integer NOT NULL,
    "orgId" integer NOT NULL,
    details character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Announcements_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."BracketMatches"
(
    id integer NOT NULL DEFAULT nextval('"BracketMatches_id_seq"'::regclass),
    "bracketId" integer NOT NULL,
    "bracketMatchId" integer NOT NULL,
    "winnerTo" integer,
    "loserTo" integer,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "BracketMatches_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."BracketTypes"
(
    id integer NOT NULL DEFAULT nextval('"BracketTypes_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT "BracketTypes_pkey" PRIMARY KEY (id),
    CONSTRAINT "BracketTypes_name_key" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."Brackets"
(
    id integer NOT NULL DEFAULT nextval('"Brackets_id_seq"'::regclass),
    "bracketStage" integer,
    size integer NOT NULL,
    "eventId" integer NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Brackets_pkey" PRIMARY KEY (id),
    CONSTRAINT "Brackets_eventId_key" UNIQUE ("eventId"),
    CONSTRAINT "Brackets_size_key" UNIQUE (size)
);

CREATE TABLE IF NOT EXISTS public."Comments"
(
    id integer NOT NULL DEFAULT nextval('"Comments_id_seq"'::regclass),
    "userId" integer NOT NULL,
    "threadId" integer,
    post character varying(255) COLLATE pg_catalog."default" NOT NULL,
    reply integer,
    deleted boolean NOT NULL DEFAULT false,
    details character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Comments_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Editions"
(
    id integer NOT NULL DEFAULT nextval('"Editions_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "seriesId" integer NOT NULL,
    "permissionId" integer NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Editions_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Events"
(
    id integer NOT NULL DEFAULT nextval('"Events_id_seq"'::regclass),
    "editionId" integer,
    "permissionId" integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    location character varying(255) COLLATE pg_catalog."default",
    country character varying(255) COLLATE pg_catalog."default",
    "startDate" timestamp with time zone,
    "endDate" timestamp with time zone,
    timezone integer,
    ongoing boolean NOT NULL DEFAULT false,
    concluded boolean NOT NULL DEFAULT false,
    importance integer NOT NULL DEFAULT 0,
    "playerCount" integer,
    "tournamentStructure" character varying(255) COLLATE pg_catalog."default",
    "seedingMethod" integer,
    "prizeCash" integer NOT NULL DEFAULT 0,
    "prizeOther" character varying(255) COLLATE pg_catalog."default",
    "versionId" integer,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Events_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Forums"
(
    id integer NOT NULL DEFAULT nextval('"Forums_id_seq"'::regclass),
    "subName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    details character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Forums_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Matches"
(
    id integer NOT NULL DEFAULT nextval('"Matches_id_seq"'::regclass),
    "dateTime" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "bestOf" integer,
    "player1Id" integer,
    "player1Score" integer DEFAULT 0,
    "player2Id" integer,
    "player2Score" integer DEFAULT 0,
    "winnerId" integer,
    "loserId" integer,
    "versionId" integer NOT NULL,
    live boolean DEFAULT false,
    completed boolean DEFAULT false,
    "bracketId" integer,
    "bracketMatchId" integer,
    "eventId" integer,
    draw boolean DEFAULT false,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Matches_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Organisations"
(
    id integer NOT NULL DEFAULT nextval('"Organisations_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    about character varying(255) COLLATE pg_catalog."default",
    "permissionId" integer NOT NULL,
    "ownerId" integer,
    "shortName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    youtube character varying(255) COLLATE pg_catalog."default",
    website character varying(255) COLLATE pg_catalog."default",
    discord character varying(255) COLLATE pg_catalog."default",
    facebook character varying(255) COLLATE pg_catalog."default",
    twitter character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    twitch character varying(255) COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Organisations_pkey" PRIMARY KEY (id),
    CONSTRAINT "Organisations_ownerId_key" UNIQUE ("ownerId"),
    CONSTRAINT "Organisations_permissionId_key" UNIQUE ("permissionId")
);

CREATE TABLE IF NOT EXISTS public."Permissions"
(
    id integer NOT NULL DEFAULT nextval('"Permissions_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Permissions_pkey" PRIMARY KEY (id),
    CONSTRAINT "Permissions_name_key" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."PinnedEvents"
(
    id integer NOT NULL DEFAULT nextval('"PinnedEvents_id_seq"'::regclass),
    "eventId" integer NOT NULL,
    "orgId" integer NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "PinnedEvents_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."PlayerDetails"
(
    id integer NOT NULL DEFAULT nextval('"PlayerDetails_id_seq"'::regclass),
    "userId" integer,
    elo integer,
    photo boolean,
    "firstName" character varying(255) COLLATE pg_catalog."default",
    "lastName" character varying(255) COLLATE pg_catalog."default",
    alias character varying(255) COLLATE pg_catalog."default",
    birthdate timestamp with time zone,
    "homeTown" character varying(255) COLLATE pg_catalog."default",
    profile character varying(255) COLLATE pg_catalog."default",
    country character varying(255) COLLATE pg_catalog."default",
    state character varying(2) COLLATE pg_catalog."default",
    playstyle character varying(255) COLLATE pg_catalog."default",
    pb integer,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "PlayerDetails_pkey" PRIMARY KEY (id),
    CONSTRAINT "PlayerDetails_alias_key" UNIQUE (alias)
);

CREATE TABLE IF NOT EXISTS public."PlayerSeeds"
(
    id integer NOT NULL DEFAULT nextval('"PlayerSeeds_id_seq"'::regclass),
    "playerId" integer NOT NULL,
    "seederId" integer,
    seed integer,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "PlayerSeeds_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."QualifyingScores"
(
    id integer NOT NULL DEFAULT nextval('"QualifyingScores_id_seq"'::regclass),
    "seederId" integer,
    "playerId" integer NOT NULL,
    score integer NOT NULL,
    pending boolean NOT NULL DEFAULT true,
    approved boolean NOT NULL DEFAULT false,
    "timestamp" integer,
    "videoLink" character varying(255) COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "QualifyingScores_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Seeders"
(
    id integer NOT NULL DEFAULT nextval('"Seeders_id_seq"'::regclass),
    "eventId" integer NOT NULL,
    "tierLimit" integer NOT NULL DEFAULT 1,
    description character varying(255) COLLATE pg_catalog."default",
    "averageOf" integer DEFAULT 1,
    "seedingMethod" integer NOT NULL,
    open boolean DEFAULT true,
    finalised boolean DEFAULT false,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Seeders_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."SeedingMethods"
(
    id integer NOT NULL DEFAULT nextval('"SeedingMethods_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "SeedingMethods_pkey" PRIMARY KEY (id),
    CONSTRAINT "SeedingMethods_name_key" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."SequelizeMeta"
(
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SequelizeMeta_pkey" PRIMARY KEY (name)
);

CREATE TABLE IF NOT EXISTS public."Series"
(
    id integer NOT NULL DEFAULT nextval('"Series_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "orgId" integer NOT NULL,
    "permissionId" integer NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Series_pkey" PRIMARY KEY (id),
    CONSTRAINT "Series_name_key" UNIQUE (name),
    CONSTRAINT "Series_orgId_key" UNIQUE ("orgId"),
    CONSTRAINT "Series_permissionId_key" UNIQUE ("permissionId")
);

CREATE TABLE IF NOT EXISTS public."Streams"
(
    id integer NOT NULL DEFAULT nextval('"Streams_id_seq"'::regclass),
    "matchId" integer NOT NULL,
    "streamAddress" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Streams_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Threads"
(
    id integer NOT NULL DEFAULT nextval('"Threads_id_seq"'::regclass),
    "userId" integer NOT NULL,
    "announcementsId" integer,
    "forumsId" integer,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    details character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Threads_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    id integer NOT NULL DEFAULT nextval('"Users_id_seq"'::regclass),
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "displayName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Users_pkey" PRIMARY KEY (id),
    CONSTRAINT "Users_displayName_key" UNIQUE ("displayName"),
    CONSTRAINT "Users_username_key" UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public."Version"
(
    id integer NOT NULL DEFAULT nextval('"Version_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT "Version_pkey" PRIMARY KEY (id),
    CONSTRAINT "Version_name_key" UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public."Versions"
(
    id integer NOT NULL DEFAULT nextval('"Versions_id_seq"'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Versions_pkey" PRIMARY KEY (id),
    CONSTRAINT "Versions_name_key" UNIQUE (name)
);

ALTER TABLE IF EXISTS public."Admins"
    ADD CONSTRAINT "Admins_permissionId_fkey" FOREIGN KEY ("permissionId")
    REFERENCES public."Permissions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Admins_permissionId_key"
    ON public."Admins"("permissionId");


ALTER TABLE IF EXISTS public."Admins"
    ADD CONSTRAINT "Admins_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Admins_userId_key"
    ON public."Admins"("userId");


ALTER TABLE IF EXISTS public."Announcements"
    ADD CONSTRAINT "Announcements_eventId_fkey" FOREIGN KEY ("eventId")
    REFERENCES public."Events" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Announcements"
    ADD CONSTRAINT "Announcements_orgId_fkey" FOREIGN KEY ("orgId")
    REFERENCES public."Organisations" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Announcements"
    ADD CONSTRAINT "Announcements_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."BracketMatches"
    ADD CONSTRAINT "BracketMatches_bracketId_fkey" FOREIGN KEY ("bracketId")
    REFERENCES public."Brackets" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Brackets"
    ADD CONSTRAINT "Brackets_eventId_fkey" FOREIGN KEY ("eventId")
    REFERENCES public."Events" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Brackets_eventId_key"
    ON public."Brackets"("eventId");


ALTER TABLE IF EXISTS public."Comments"
    ADD CONSTRAINT "Comments_reply_fkey" FOREIGN KEY (reply)
    REFERENCES public."Comments" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Comments"
    ADD CONSTRAINT "Comments_threadId_fkey" FOREIGN KEY ("threadId")
    REFERENCES public."Threads" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Comments"
    ADD CONSTRAINT "Comments_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Editions"
    ADD CONSTRAINT "Editions_permissionId_fkey" FOREIGN KEY ("permissionId")
    REFERENCES public."Permissions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Editions"
    ADD CONSTRAINT "Editions_seriesId_fkey" FOREIGN KEY ("seriesId")
    REFERENCES public."Series" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Events"
    ADD CONSTRAINT "Events_editionId_fkey" FOREIGN KEY ("editionId")
    REFERENCES public."Editions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Events"
    ADD CONSTRAINT "Events_permissionId_fkey" FOREIGN KEY ("permissionId")
    REFERENCES public."Permissions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Events"
    ADD CONSTRAINT "Events_versionId_fkey" FOREIGN KEY ("versionId")
    REFERENCES public."Versions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_bracketId_fkey" FOREIGN KEY ("bracketId")
    REFERENCES public."Brackets" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_bracketMatchId_fkey" FOREIGN KEY ("bracketMatchId")
    REFERENCES public."BracketMatches" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_eventId_fkey" FOREIGN KEY ("eventId")
    REFERENCES public."Events" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_loserId_fkey" FOREIGN KEY ("loserId")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_player1Id_fkey" FOREIGN KEY ("player1Id")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_player2Id_fkey" FOREIGN KEY ("player2Id")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_versionId_fkey" FOREIGN KEY ("versionId")
    REFERENCES public."Versions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Matches"
    ADD CONSTRAINT "Matches_winnerId_fkey" FOREIGN KEY ("winnerId")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Organisations"
    ADD CONSTRAINT "Organisations_ownerId_fkey" FOREIGN KEY ("ownerId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Organisations_ownerId_key"
    ON public."Organisations"("ownerId");


ALTER TABLE IF EXISTS public."Organisations"
    ADD CONSTRAINT "Organisations_permissionId_fkey" FOREIGN KEY ("permissionId")
    REFERENCES public."Permissions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Organisations_permissionId_key"
    ON public."Organisations"("permissionId");


ALTER TABLE IF EXISTS public."PinnedEvents"
    ADD CONSTRAINT "PinnedEvents_eventId_fkey" FOREIGN KEY ("eventId")
    REFERENCES public."Events" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."PlayerDetails"
    ADD CONSTRAINT "PlayerDetails_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."PlayerSeeds"
    ADD CONSTRAINT "PlayerSeeds_playerId_fkey" FOREIGN KEY ("playerId")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."PlayerSeeds"
    ADD CONSTRAINT "PlayerSeeds_seederId_fkey" FOREIGN KEY ("seederId")
    REFERENCES public."Seeders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."QualifyingScores"
    ADD CONSTRAINT "QualifyingScores_playerId_fkey" FOREIGN KEY ("playerId")
    REFERENCES public."PlayerDetails" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."QualifyingScores"
    ADD CONSTRAINT "QualifyingScores_seederId_fkey" FOREIGN KEY ("seederId")
    REFERENCES public."Seeders" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Seeders"
    ADD CONSTRAINT "Seeders_eventId_fkey" FOREIGN KEY ("eventId")
    REFERENCES public."Events" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Series"
    ADD CONSTRAINT "Series_orgId_fkey" FOREIGN KEY ("orgId")
    REFERENCES public."Organisations" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Series_orgId_key"
    ON public."Series"("orgId");


ALTER TABLE IF EXISTS public."Series"
    ADD CONSTRAINT "Series_permissionId_fkey" FOREIGN KEY ("permissionId")
    REFERENCES public."Permissions" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "Series_permissionId_key"
    ON public."Series"("permissionId");


ALTER TABLE IF EXISTS public."Streams"
    ADD CONSTRAINT "Streams_matchId_fkey" FOREIGN KEY ("matchId")
    REFERENCES public."Matches" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Threads"
    ADD CONSTRAINT "Threads_announcementsId_fkey" FOREIGN KEY ("announcementsId")
    REFERENCES public."Announcements" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Threads"
    ADD CONSTRAINT "Threads_forumsId_fkey" FOREIGN KEY ("forumsId")
    REFERENCES public."Forums" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Threads"
    ADD CONSTRAINT "Threads_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."Users" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;